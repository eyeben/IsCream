worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # HTTP -> HTTPS 리디렉션
    server {
        listen 80;
        server_name i12a407.p.ssafy.io;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS 설정
    server {
        listen 443 ssl;
        server_name i12a407.p.ssafy.io;

        ssl_certificate /etc/letsencrypt/live/i12a407.p.ssafy.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/i12a407.p.ssafy.io/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # API 요청을 백엔드로 프록시
        location /api {
            proxy_pass http://backend-app:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # AI 서버 요청을 AI 컨테이너로 프록시
        location /ai {
            proxy_pass http://ai-server:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # React 정적 파일 서빙
        location /main {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # 에러 페이지 설정
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
